@if (TotalPages > 0)
{
    @*<div class="float-left pager">
            <button type="button" class="btn btn-primary btn-sm" disabled="@((PageIndex == 1) ? "disabled" : null)" @onclick="@(() => OnClick.InvokeAsync(1))">
                <i class="fa fa-angle-double-left" aria-hidden="true"></i>
            </button>
            <button type="button" class="btn btn-primary btn-sm" disabled="@(HasPreviousPage ? null : "disabled")" @onclick="@(() => OnClick.InvokeAsync(PageIndex - 1))">
                <i class="fa fa-angle-left" aria-hidden="true"></i>
            </button>
            <span>@PageIndex</span>
            <button type="button" class="btn btn-primary btn-sm" disabled="@(HasNextPage ? null : "disabled")" @onclick="@(() => OnClick.InvokeAsync(PageIndex + 1))">
                <i class="fa fa-angle-right" aria-hidden="true"></i>
            </button>
            <button type="button" class="btn btn-primary btn-sm" disabled="@((PageIndex == TotalPages) ? "disabled" : null)" @onclick="@(() => OnClick.InvokeAsync(TotalPages))">
                <i class="fa fa-angle-double-right" aria-hidden="true"></i>
            </button>
        </div>*@


    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item @(PageIndex == 1 ? "disabled":"")">
                <a class="page-link" aria-label="Previous" @onclick="@(() => OnClick.InvokeAsync(PageIndex-1))">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            @for (int i = 1; i < TotalPages+1; i++)
            {
                int count = i;
                <li class="page-item @(PageIndex == count? "active":"") "><a class="page-link"  @onclick="@(() => OnClick.InvokeAsync(count))">@count</a></li>
            }
            @*<li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>*@
            <li class="page-item @(PageIndex == TotalPages ? "disabled":"")">
                <a class="page-link" aria-label="Next"  @onclick="@(() => OnClick.InvokeAsync(PageIndex+1))">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
}





<style>
    .pager button, .pager span {
        padding-left: 10px;
        padding-right: 10px;
    }
</style>

@code {
    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public int TotalPages { get; set; }

    [Parameter]
    public bool HasPreviousPage { get; set; }

    [Parameter]
    public bool HasNextPage { get; set; }
 
    [Parameter]
    public EventCallback<int> OnClick { get; set; }

}