@page "/drivers"
@page "/drivers/list/{Id:long}"
@inherits OwningComponentBase<DataContext>
@*<h4 class="bg-primary text-white text-center p-2">Работа с данными о водителях</h4>*@
@*<h5 class="bg-danger text-white text-center p-2">В разработке</h5>*@

<div class="card">
    <div class="card-header">
        <h4>Автомобиль: <b>@carModel</b> Гос.номер: <b>@carData.RegistrationNumber</b> Год выпуска: <b>@carData.FirstRegistrationYear</b></h4>
    </div>
    <div class="card-body">
        <table class="table table-sm">
            <thead>
                <tr>
                    <th>Ф.И.О водителя</th>
                    <th>Дата получения</th>
                    <th>Дата возврата</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in carUsers)
                {
                    <tr>
                        <td>@item.Employee.FullName</td>
                        <td>@item.StartUsingDate.ToShortDateString()</td>
                        <td>@item.EndUsingDate</td>
                        <td>
                            <button class="btn btn-dark @(item.EndUsingDate==null ? "":"d-none")">Возврат</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>


    </div>
    <div class="card-footer">
        <div class="text-center">
            <NavLink class="btn btn-primary" href=@($"/driver/assignment/{Id}")>Новое закрепление</NavLink>
            <NavLink class="btn btn-secondary" href=@($"/cars/details/{Id}")>Back</NavLink>
        </div>
    </div>
</div>

@*<div class="text-center mb-3">
        <NavLink class="btn btn-secondary" ref="">Back</NavLink>
    </div>*@






@code {
    [Parameter]
    public long Id { get; set; }

    DataContext _context => Service;

    Car carData = new Car() {CarModel=new CarModel() };
    string carModel;

    List<CarUser> carUsers = new List<CarUser>();


    protected async override Task OnParametersSetAsync()
    {
        carData = await _context.Cars
            .Include(c => c.CarModel).ThenInclude(c => c.Manufacturer)
            .Include(c=>c.CarUsers).ThenInclude(cu=>cu.Employee)
            .FirstOrDefaultAsync(c => c.Id == Id);
        carModel = $"{carData.CarModel.Manufacturer.Name} {carData.CarModel.Model}";


        carUsers = carData.CarUsers.OrderByDescending(cu=>cu.ID).ToList(); 
            
            
            
            //. .OrderBy(                  (cu => cu.EndUsingDate,); сексизм.OrdeBy(cu => cu.EndUsingDate);

        //return base.OnParametersSetAsync();
    }
}
