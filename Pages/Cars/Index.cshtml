@page
@model KernelCars.Pages.Cars.IndexModel
@{
    ViewData["Title"] = "Cars";
}
<h2>Cars</h2>
<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-group">
        <p>
            Find by Number:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" />|
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Cars[0].CarModelId)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NumberSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Cars[0].RegistrationNumber)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cars[0].VinNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cars[0].CarOwner.FirstName)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Cars)
        {
        <tr>
            <td>
                @Html.DisplayFor(modeItem => item.CarModelId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VinNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CarOwner.FirstName)
            </td>
            <td>
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>

</table>
@{
    var prevDisabled = !Model.Cars.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Cars.HasNextPage ? "disabled" : "";

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Cars.PageIndex-1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Cars.PageIndex+1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
}